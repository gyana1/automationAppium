# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PruvitPulse Demo Android Java

on:
  workflow_dispatch :
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: setup appium
        run:
          npm install  - g appium@v1.23
          appium -v
      - name: Run Appium Server
        run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Checking hardware accelaration
        run: sudo apt install cpu-checker && sudo kvm-ok

      - name: Set up emulator
        run: sdkmanager --install 'system-images;android-30;google_apis;x86_64'

      - name: Create emulator
        run: avdmanager --verbose create avd --force --name "test_emulator" --package 'system-images;android-30;google_apis;x86_64' --device 'pixel_5'

      - name: List emulators
        run:  $ANDROID_HOME/emulator/emulator -list-avds

      - name: Start emulator
        run: $ANDROID_HOME/emulator/emulator @test_emulator -gpu auto -no-audio -no-window -wipe-data -no-boot-anim

      - name: Wait for emulator to start
        run: android-wait-for-emulator

      - name: Build with Gradle
        run: gradle cleanTest test --tests "com.example.chrome.MobileChromeTest"
        continue-on-error: true

      - name: Run tests
        run: ./gradlew clean connectedAndroidTest

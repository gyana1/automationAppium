# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PruvitPulse Demo Android Java

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
      - uses: actions/checkout@v3
      
      - name: SetUp Java 17
      - uses: actions/setup-java@v3
        with:
         distribution: 'temurin' # See 'Supported distributions' for available options
         java-version: '17'
      
      - name: Install and Run Appium Server
      - uses: moatazeldebsy/appium-server-gitHub-action@V1.0.4
         
      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Set up emulator
        run: sdkmanager --install 'system-images;android-30;google_apis;x86_64' --verbose
              
      - name: Create emulator
        run: echo no | avdmanager create avd -n test_emulator -k 'system-images;android-30;google_apis;x86_64' --device 'pixel'

      - name: Start emulator
        run: emulator -avd test_emulator -no-audio -no-window -wipe-data -no-boot-anim &

      - name: Wait for emulator to start
        run: android-wait-for-emulator

      - name: Run tests
        run: ./gradlew clean connectedAndroidTest
